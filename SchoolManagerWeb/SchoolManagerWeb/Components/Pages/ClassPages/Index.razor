@page "/classes"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using SchoolManagerModel.Entities
@using SchoolManagerModel.Persistence
@implements IAsyncDisposable
@inject IDbContextFactory<SchoolDbContext> DbFactory
@using SchoolManagerModel.Entities

<PageTitle>Index</PageTitle>

<h1>Classes</h1>

<p>
    <a href="classes/create">Create New</a>
</p>

@if (Classes != null)
{
    <QuickGrid Class="table" Items="Classes.AsQueryable()" TItem="Class">
        <PropertyColumn Property="@(x => x.Name)" Title="Class Name"/>
        <TemplateColumn Context="currentClass">
            <a href="@($"classes/edit?id={currentClass.Id}")">Edit</a> |
            <a href="@($"classes/details?id={currentClass.Id}")">Details</a> |
            <a href="@($"classes/delete?id={currentClass.Id}")">Delete</a>
        </TemplateColumn>
    </QuickGrid>
}
else
{
    <p>Loading...</p>
}

@code {
    private SchoolDbContext context = default!;
    private List<Class>? Classes { get; set; }

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();
        Classes = await context.Classes.ToListAsync();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}